#include <MQTT.h>

// This #include statement was automatically added by the Particle IDE.
#include <Adafruit_DHT.h>

#define DHTPIN 2     // what pin we're connected to

// Uncomment whatever type you're using!
#define DHTTYPE DHT11		// DHT 11 
//#define DHTTYPE DHT22		// DHT 22 (AM2302)
//#define DHTTYPE DHT21		// DHT 21 (AM2301)

// Connect pin 1 (on the left) of the sensor to +5V
// Connect pin 2 of the sensor to whatever your DHTPIN is
// Connect pin 4 (on the right) of the sensor to GROUND
// Connect a 10K resistor from pin 2 (data) to pin 1 (power) of the sensor

//setup Wifi - Angeluz home
#define SSID        "NETLIFE-MARIA"
#define PASSWORD    "099400Acceso"

TCPClient client;

DHT dht(DHTPIN, DHTTYPE);

void callback(char* topic, byte* payload, unsigned int length);

#define Broker "m12.cloudmqtt.com"
#define Port 17051
#define UserName "nfaseset"
#define Password "kRB2nGhRuDzm"



#define TOPESTADOCAFETERA "/onoff"
#define TOPTEMPERATURA "/temp/ir"
#define TOPPROX "/prox"
#define TOPCAFETERA "/cafetera"

void callback(char* topic, byte* payload, unsigned int length) {
    char p[length + 1];
    memcpy(p, payload, length);
    p[length] = NULL;
    String message(p);
    String topic2=String(topic);
    /*
    if (topic2.equals(TOPPROX))    
        if (message.equals("ready"))
            //SensorProximidad();
            //client.publish(TOPPROX,"on");
            if(sensorValue==1)
                client.publish(TOPPROX, "0");
            else
                client.publish(TOPPROX, "1");
    if (topic2.equals(TOPCAFETERA)){  
        if (message.equals("on")){
          digitalWrite(RELAY_PIN,HIGH); 
          client.publish(TOPESTADOCAFETERA,"on");
          encendida = true;
        }else if (message.equals("off")){
          digitalWrite(RELAY_PIN,LOW);
          client.publish(TOPESTADOCAFETERA,"off");
          encendida = false;
        }else if (message.equals("ready"))
          client.publish(TOPCAFETERA,"conectada");
    }*/
}

MQTT clientmqtt(Broker, Port, callback);

double h;
// Read temperature as Celsius
double t;
	
const int xpin = A3;
const int ypin = A2;
const int zpin = A1;



void setup() {
	Serial.begin(9600); 
	
    Serial.println("set wifi");
    WiFi.setCredentials(SSID, PASSWORD);
    WiFi.connect();
    
    while(!WiFi.ready()){
        Serial.println("Error en wifi");
    }
	Serial.println("DHTxx test!");
	
	dht.begin();
	
	clientmqtt.connect("cafetera",UserName,Password);
	
	if (clientmqtt.isConnected()) {
        Serial.println("Connected to Cloud Mqtt");
        clientmqtt.subscribe(TOPPROX);
        clientmqtt.subscribe(TOPCAFETERA);
        clientmqtt.publish(TOPCAFETERA,"conectada");
    }
    else
        Serial.println("Fail to conected to mqtt");
	
	Particle.variable("temp", t);
	Particle.variable("Hume", h);
}

void loop() {
    if (Particle.connected() == false) {
    Particle.connect();
    }
// Wait a few seconds between measurements.
	delay(10000);
	
	if (clientmqtt.isConnected()){
        clientmqtt.loop();
        Serial.print("Temperature: ");
        Serial.println(t);
        clientmqtt.publish(TOPTEMPERATURA,String(t));
        
    } else 
        Serial.println("No conected to mqtt");
	/*
	Serial.print(analogRead(xpin));
    Serial.print("\t");
    Serial.print(analogRead(ypin));
    Serial.print("\t");
    Serial.print(analogRead(zpin));
    Serial.println();*/

// Reading temperature or humidity takes about 250 milliseconds!
// Sensor readings may also be up to 2 seconds 'old' (its a 
// very slow sensor)
	h = dht.getHumidity();
// Read temperature as Celsius
	t = dht.getTempCelcius();
  
// Check if any reads failed and exit early (to try again).
	if (isnan(h) || isnan(t)) {
		Serial.println("Failed to read from DHT sensor!");
		return;
	}
	
	Particle.publish("temperature", String(t));
    Particle.publish("humidity", String(h));
}